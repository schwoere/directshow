<?xml version="1.0" encoding="UTF-8"?>

<UTQLPatternTemplates xmlns='http://ar.in.tum.de/ubitrack/utql'
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
	xmlns:xi='http://www.w3.org/2001/XInclude'
	xmlns:h="http://www.w3.org/1999/xhtml"
	xsi:schemaLocation='http://ar.in.tum.de/ubitrack/utql ../../../schema/utql_templates.xsd'>

	<Pattern name="DirectShowFrameGrabber" displayName="DirectShow Framegrabber">
		<Description>
			<h:p>
				This component grabs images from a DirectShow device and pushes them. Optional image undistortion
				is performed if the <h:code>intrinsicMatrixFile</h:code> and <h:code>distortionFile</h:code> attributes 
				are provided. In this case, the intrinsic camera matrix can be retrieved from the 
				<h:code>Intrinsics</h:code> port.
			</h:p>
		</Description>
		<Output>
			<Node name="Camera" displayName="Camera" />
			<Node name="ImagePlane" displayName="Image Plane" />
			<Edge name="Intrinsics" source="Camera"	destination="ImagePlane" displayName="Camera Intrinsics">
				<Description>
					<h:p>The intrinsic camera matrix.</h:p>
				</Description>
				<Attribute name="type" value="3x3Matrix" xsi:type="EnumAttributeReferenceType"/>
				<Attribute name="mode" value="pull" xsi:type="EnumAttributeReferenceType"/>
			</Edge>
			<Edge name="Output" source="Camera" destination="ImagePlane" displayName="Greyscale Image">
				<Description>
					<h:p>The camera image (greyscale).</h:p>
				</Description>
				<Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
				<Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
			</Edge>
			<Edge name="ColorOutput" source="Camera" destination="ImagePlane" displayName="Color Image">
				<Description>
					<h:p>The camera image (color).</h:p>
				</Description>
				<Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
				<Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
			</Edge>
		</Output>

		<DataflowConfiguration>
			<UbitrackLib class="DirectShowFrameGrabber" />

			<Attribute name="timeOffset" default="0" xsi:type="IntAttributeDeclarationType" displayName="time offset">
				<Description>
					<h:p>Offset in ms to add to the timestamps created by the component. This is used
					to compensate clock shift.</h:p>
				</Description>
			</Attribute>
			<Attribute name="divisor" min="1" default="1" xsi:type="IntAttributeDeclarationType" displayName="divisor">
				<Description>
					<h:p>Only send out every n-th frame. This is used to limit the frame rate.</h:p>
				</Description>
			</Attribute>
			<Attribute name="imageWidth" min="1" default="320" xsi:type="IntAttributeDeclarationType" displayName="image width">
				<Description>
					<h:p>Desired image width in pixels. Note that this is only a recommendation and the actual
					size will depend on the capabilities of the camera driver. </h:p>
				</Description>
			</Attribute>
			<Attribute name="imageHeight" min="1" default="240" xsi:type="IntAttributeDeclarationType" displayName="image height">
				<Description>
					<h:p>Desired image height in pixels. Note that this is only a recommendation and the actual
					size will depend on the capabilities of the camera driver. </h:p>
				</Description>
			</Attribute>
			<Attribute name="cameraName" default="" xsi:type="StringAttributeDeclarationType" displayName="camera name">
				<Description>
					<h:p>Substring of the camera name as displayed by Windows. This will be used to select
					a camera, if multiple cameras are available.</h:p>
				</Description>
			</Attribute>
            <Attribute name="intrinsicMatrixFile" default="CamMatrix.calib" displayName="Intrinsic matrix file" xsi:type="PathAttributeDeclarationType">
                <Description>
                	<h:p>Optional file where the camera intrinsic matrix will be read from. This is necessary to 
                	undistort the image. The matrix is also provided to other components via the 
                	<h:code>Intrinsics</h:code> port</h:p>
               	</Description>
            </Attribute>
            <Attribute name="distortionFile" default="CamCoeffs.calib" displayName="Distortion file" xsi:type="PathAttributeDeclarationType">
                <Description><h:p>Optional file where radial distortion coefficients will be read from. This is necessary to
                undistort the image. </h:p></Description>
            </Attribute>
		</DataflowConfiguration>
	</Pattern>


	<Pattern name="DirectShowFrameGrabberUncalibrated" displayName="DirectShow Framegrabber (uncalibrated)">
		<Description>
			<h:p>
				This component grabs images from a DirectShow device and pushes them.
			</h:p>
		</Description>
		<Output>
			<Node name="Camera" displayName="Camera" />
			<Node name="ImagePlane" displayName="Image Plane" />
			<Edge name="Output" source="Camera" destination="ImagePlane" displayName="Greyscale Image">
				<Description>
					<h:p>The camera image (greyscale).</h:p>
				</Description>
				<Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
				<Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
			</Edge>
			<Edge name="ColorOutput" source="Camera" destination="ImagePlane" displayName="Color Image">
				<Description>
					<h:p>The camera image (color).</h:p>
				</Description>
				<Attribute name="type" value="Image" xsi:type="EnumAttributeReferenceType"/>
				<Attribute name="mode" value="push" xsi:type="EnumAttributeReferenceType"/>
			</Edge>
		</Output>

		<DataflowConfiguration>
			<UbitrackLib class="DirectShowFrameGrabber" />

			<Attribute name="timeOffset" default="0" xsi:type="IntAttributeDeclarationType" displayName="time offset">
				<Description>
					<h:p>Offset in ms to add to the timestamps created by the component. This is used
					to compensate clock shift.</h:p>
				</Description>
			</Attribute>
			<Attribute name="divisor" min="1" default="1" xsi:type="IntAttributeDeclarationType" displayName="divisor">
				<Description>
					<h:p>Only send out every n-th frame. This is used to limit the frame rate.</h:p>
				</Description>
			</Attribute>
			<Attribute name="imageWidth" min="0" default="320" xsi:type="IntAttributeDeclarationType" displayName="image width">
				<Description>
					<h:p>Desired image width in pixels. Note that this is only a recommendation and the actual
					size will depend on the capabilities of the camera driver. </h:p>
				</Description>
			</Attribute>
			<Attribute name="imageHeight" min="0" default="240" xsi:type="IntAttributeDeclarationType" displayName="image height">
				<Description>
					<h:p>Desired image height in pixels. Note that this is only a recommendation and the actual
					size will depend on the capabilities of the camera driver. </h:p>
				</Description>
			</Attribute>
			<Attribute name="cameraName" default="" xsi:type="StringAttributeDeclarationType" displayName="camera name">
				<Description>
					<h:p>Substring of the camera name as displayed by Windows. This will be used to select
					a camera, if multiple cameras are available.</h:p>
				</Description>
			</Attribute>
		</DataflowConfiguration>
	</Pattern>

	<!-- Attribute declarations -->

	<GlobalNodeAttributeDeclarations>
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/1/1)" />
	</GlobalNodeAttributeDeclarations>

	<GlobalEdgeAttributeDeclarations>
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/1)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/2)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/3)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/4)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/5)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/6)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/7)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/2/8)" />
	</GlobalEdgeAttributeDeclarations>

	<GlobalDataflowAttributeDeclarations>
		<!-- Unfortunately, the xpointer used in Xinclude is currently restricted to the element scheme and absolute element indices in Xerces (and thus XMLBeans) -->
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/1)" />
		<xi:include href="file:GlobalAttrSpec.xml" xpointer="element(/1/3/2)" />
	</GlobalDataflowAttributeDeclarations>

</UTQLPatternTemplates>

